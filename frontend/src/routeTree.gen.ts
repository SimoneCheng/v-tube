/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as ForgetPasswordImport } from './routes/forget-password'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout.index'
import { Route as ResetPasswordTokenImport } from './routes/reset-password.$token'
import { Route as LayoutMeImport } from './routes/_layout.me'
import { Route as LayoutVideoVideoIdImport } from './routes/_layout.video.$videoId'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ForgetPasswordRoute = ForgetPasswordImport.update({
  path: '/forget-password',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const ResetPasswordTokenRoute = ResetPasswordTokenImport.update({
  path: '/reset-password/$token',
  getParentRoute: () => rootRoute,
} as any)

const LayoutMeRoute = LayoutMeImport.update({
  path: '/me',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutVideoVideoIdRoute = LayoutVideoVideoIdImport.update({
  path: '/video/$videoId',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/forget-password': {
      id: '/forget-password'
      path: '/forget-password'
      fullPath: '/forget-password'
      preLoaderRoute: typeof ForgetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_layout/me': {
      id: '/_layout/me'
      path: '/me'
      fullPath: '/me'
      preLoaderRoute: typeof LayoutMeImport
      parentRoute: typeof LayoutImport
    }
    '/reset-password/$token': {
      id: '/reset-password/$token'
      path: '/reset-password/$token'
      fullPath: '/reset-password/$token'
      preLoaderRoute: typeof ResetPasswordTokenImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/video/$videoId': {
      id: '/_layout/video/$videoId'
      path: '/video/$videoId'
      fullPath: '/video/$videoId'
      preLoaderRoute: typeof LayoutVideoVideoIdImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  LayoutRoute: LayoutRoute.addChildren({
    LayoutMeRoute,
    LayoutIndexRoute,
    LayoutVideoVideoIdRoute,
  }),
  ForgetPasswordRoute,
  LoginRoute,
  RegisterRoute,
  ResetPasswordTokenRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/forget-password",
        "/login",
        "/register",
        "/reset-password/$token"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/me",
        "/_layout/",
        "/_layout/video/$videoId"
      ]
    },
    "/forget-password": {
      "filePath": "forget-password.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_layout/me": {
      "filePath": "_layout.me.tsx",
      "parent": "/_layout"
    },
    "/reset-password/$token": {
      "filePath": "reset-password.$token.tsx"
    },
    "/_layout/": {
      "filePath": "_layout.index.tsx",
      "parent": "/_layout"
    },
    "/_layout/video/$videoId": {
      "filePath": "_layout.video.$videoId.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
